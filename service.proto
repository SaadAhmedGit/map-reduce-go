syntax = "proto3";

package proto;
option go_package = "/internal/proto";

message emptyMessage {}

message workerInfo {
    string address = 2;
    string port = 3;
}

message reducerInfoRequest {
    repeated workerInfo workers = 1;
}

message Kv {
    string key = 1;
    string value = 2;
}

message ReduceRequest {
    string key = 1;
    repeated string values = 2;
}

message Chunk {
    bytes data = 1;
}

message Ack {
    string msg = 1;
    bool success = 2;
}

service Worker {
    // Meant to be called on all workers
    rpc HeartBeat(emptyMessage) returns (emptyMessage) {}

    // Meant to be called on mappers
    rpc ReceiveKvStream(stream Kv) returns (Ack) {}
    rpc StartMap(emptyMessage) returns (Ack) {}
    rpc ReducerInfo(reducerInfoRequest) returns (Ack) {} // Called by master

    // Meant to be called on reducers
    rpc ReducerReceiveKvStream(stream Kv) returns (Ack) {} // Called by mappers
    rpc StartReduce(emptyMessage) returns (stream Chunk) {} // Called by master
}